










    
    
    
    
    
    
    

    

    Career Center
    




















    body {
        background: #363636;
        color: #ccc;
    }





    

    

    

    

    

    


    

    

    

    

    

    

    

    

    

    



















    
    



    
        
            
                
                
                    New Search
                       
                    
                
                
                
                    
                    Login Page
                       
                    
                    
                
            
        
    
    

    










Position Description











 



Associate Data Analyst




Location


Nashville




Job Code


186




# of Openings


1




Apply Now


p.MsoNormal, li.MsoNormal, div.MsoNormal {

margin: 0.0in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Arial;

}

p {

margin: 0.0in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Times;

}

p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 0.0in;

margin-left: 0.5in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Arial;

}

p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 0.0in;

margin-left: 0.5in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Arial;

}

p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 0.0in;

margin-left: 0.5in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Arial;

}

p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 0.0in;

margin-left: 0.5in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Arial;

}

span.ilad {

}

p.ioBulletedList1stLevel, li.ioBulletedList1stLevel, div.ioBulletedList1stLevel {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 6.0pt;

margin-left: 0.5in;

text-indent: -0.25in;

mso-list: l1 level1 lfo1;

font-size: 9.0pt;

}

* {

}

p.ioNumberedListIndent, li.ioNumberedListIndent, div.ioNumberedListIndent {

margin-right: 0.0in;

margin-bottom: 6.0pt;

margin-left: 0.25in;

font-size: 9.0pt;

}

* {

}

p.ioBulletedList2ndLevel, li.ioBulletedList2ndLevel, div.ioBulletedList2ndLevel {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 6.0pt;

margin-left: 0.5in;

text-indent: -0.25in;

mso-list: l1 level2 lfo1;

font-size: 9.0pt;

}

* {

}

p.ioBulletedList3rdLevel, li.ioBulletedList3rdLevel, div.ioBulletedList3rdLevel {

margin-right: 0.0in;

margin-bottom: 6.0pt;

margin-left: 0.75in;

text-indent: -0.25in;

mso-list: l1 level3 lfo1;

font-size: 9.0pt;

}

* {

}

*.MsoChpDefault {

font-size: 10.0pt;

font-family: Arial;

}

div.WordSection1 {

page: WordSection1;

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

ol {

margin-bottom: 0.0in;

}

ul {

margin-bottom: 0.0in;

}



p.MsoNormal, li.MsoNormal, div.MsoNormal {

margin: 0.0in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Arial;

}

p {

margin: 0.0in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Times;

}

p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 0.0in;

margin-left: 0.5in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Arial;

}

p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 0.0in;

margin-left: 0.5in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Arial;

}

p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 0.0in;

margin-left: 0.5in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Arial;

}

p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 0.0in;

margin-left: 0.5in;

margin-bottom: 1.0E-4pt;

font-size: 10.0pt;

font-family: Arial;

}

span.ilad {

}

p.ioBulletedList1stLevel, li.ioBulletedList1stLevel, div.ioBulletedList1stLevel {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 6.0pt;

margin-left: 0.5in;

text-indent: -0.25in;

mso-list: l1 level1 lfo1;

font-size: 9.0pt;

font-family: &quot;Helvetica Neue&quot;;

}

p.ioNumberedListIndent, li.ioNumberedListIndent, div.ioNumberedListIndent {

margin-right: 0.0in;

margin-bottom: 6.0pt;

margin-left: 0.25in;

font-size: 9.0pt;

font-family: &quot;Helvetica Neue&quot;;

}

p.ioBulletedList2ndLevel, li.ioBulletedList2ndLevel, div.ioBulletedList2ndLevel {

margin-top: 0.0in;

margin-right: 0.0in;

margin-bottom: 6.0pt;

margin-left: 0.5in;

text-indent: -0.25in;

mso-list: l1 level2 lfo1;

font-size: 9.0pt;

font-family: &quot;Helvetica Neue&quot;;

}

p.ioBulletedList3rdLevel, li.ioBulletedList3rdLevel, div.ioBulletedList3rdLevel {

margin-right: 0.0in;

margin-bottom: 6.0pt;

margin-left: 0.75in;

text-indent: -0.25in;

mso-list: l1 level3 lfo1;

font-size: 9.0pt;

font-family: &quot;Helvetica Neue&quot;;

}

*.MsoChpDefault {

font-size: 10.0pt;

font-family: Arial;

}

div.WordSection1 {

page: WordSection1;

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

* {

}

ol {

margin-bottom: 0.0in;

}

ul {

margin-bottom: 0.0in;

}





Job Summary

The Associate Data Analyst will be responsible for ensuring daily reporting data operations are functional across departments as well as for external clients.&nbsp; The position will also deal in a variety of data management and reporting tasks. The analyst will work directly with and report to the Data Analyst.

Responsibilities



Make adjustments to reports/dashboards as needed and respond to ad hoc data requests.

Provide routine reporting updates to internal and external clients.

Create, run, and automate simple to complex queries.

Produce or assist with creation of presentations communicating analytical information in a meaningful way.

Meet with clients and translate client needs to data actions and reports.

Establish, improve, and maintain detailed data integrity procedures to ensure data quality.

Identify and correct data integrity or ETL issues that arise.



&nbsp;

The above statements describe the general nature and level of work being performed by individuals assigned to this classification. This is not intended to be an exhaustive list of all responsibilities and duties required of personnel so classified.

&nbsp;

Qualifications



Cares about why we are doing something not only how to get it done

Ability to gain proficiency in our BI tools and maintain parts of the data pipeline.



o&nbsp;&nbsp; Ability to qualify for a government security clearance &ndash; as required by government contract

o&nbsp;&nbsp; Citizen of the United States of America &ndash; as required by government contract

Education and Experience



Education in applying data techniques and analysis, preferably in the fields of data science/analytics, math, statistics, marketing, computer science, or physics

1-3 years experience with data analysis, preferably in marketing, advertising or communications

Working knowledge of a programming language (Python, R, Julia, SQL, etc.)

Experience with Google Analytics

Familiar with any BI tool or ETL experience is a plus (pentaho, talend, tableau, SAP, Oracle, etc.)



&nbsp;

For consideration, please submit resume and salary requirements.&nbsp; RESUMES MUST BE ATTACHED IN .DOC OR .PDF FORMATS ONLY.

iostudio is an equal opportunity employer (EOE).

&nbsp;

This contractor and subcontractor shall abide by the requirements of 41 CFR 60&ndash;1.4(a), 60&ndash;300.5(a) and 60&ndash;741.5(a). These regulations prohibit discrimination against qualified individuals based on their status as protected veterans or individuals with disabilities, and prohibit discrimination against all individuals based on their race, color, religion, sex, sexual orientation, gender identity or national origin. Moreover, these regulations require that covered prime contractors and subcontractors take affirmative action to employ and advance in employment individuals without regard to race, color, religion, sex, sexual orientation, gender identity, national origin, disability or veteran status.

&nbsp;

&quot;EEO is the Law&quot; poster and poster supplement links:

https://www.dol.gov/regs/compliance/posters/eeopost.pdf

https://www.dol.gov/ofccp/regs/compliance/posters/pdf/OFCCP_EEO_Supplement_Final_JRF_QA_508c.pdf

&nbsp;

iostudio does not offer VISA sponsorship for any position.

Back
Email
Apply Now












iostudio is an equal opportunity employer (EOE). Qualified applicants are considered for employment without regard to age, race, color, religion, sex, national origin, sexual orientation, disability, or veteran status. iostudio does not offer VISA sponsorships for any positions.

iostudio is committed to working with and providing reasonable accommodation to individuals with disabilities.If you are a qualified individual wiht a disability or a disabled veteran, you have the right to request a resasonable accommodation if you are unable or limited in your ability to apply for an open position via the iostudio Careers website as a result of your disability. If you need an accommodation or further assistance in using the iostudio Careers website, please contact us at 615-724-4256.

Return to iostudio.com





























    CwsDWRFacade._path = 'https://chj.tbe.taleo.net/chj04/ats/dwr-cws';

    var DWRFacade = CwsDWRFacade;











    $(function () {

        if (typeof moveToNextStep !== 'undefined') {

            $('.oracletaleocwsv2-arrow-nav-next').trigger('click');

        }

    });

    $("[data-toggle='modal']").click(function () {

        var d_tar = $(this).attr('data-target');

        $(d_tar).show();

        var modal_he = $(d_tar).find('.modal-dialog .modal-content').height();

        var win_height = $(window).height();

        var marr = win_height - modal_he;

        $('.modal-dialog').css('margin-top', marr / 2);

    });







    // This is needed for fixing beforeShow

//    (function ($) {

//        $.extend($.datepicker, {

//

//            // Reference the orignal function so we can override it and call it later

//            _inlineDatepicker2: $.datepicker._inlineDatepicker,

//

//            // Override the _inlineDatepicker method

//            _inlineDatepicker: function (target, inst) {

//

//                // Call the original

//                this._inlineDatepicker2(target, inst);

//

//                var beforeShow = $.datepicker._get(inst, 'beforeShow');

//

//                if (beforeShow) {

//                    beforeShow.apply(target, [target, inst]);

//                }

//            }

//        });

//    }(jQuery));



    // The following needed to re-purpose Today button for Clean behavior

    (function ($) {

        $.extend($.datepicker, {

            // Reference the orignal function so we can override it and call it later if needed

            _gotoToday2: $.datepicker._gotoToday,



            // Override the _gotoToday method - clean and close

            _gotoToday: function (target, inst) {

                $(target).closest('.form-group').find('.input-group input').val('');

                $(target).fadeOut();

            }

        });

    }(jQuery));







    //jQuery Calendar

    jQuery(document).ready(function($) {
	$('.oracletaleocwsv2-datepicker.oracletaleocwsv2-datepicker-single').datepicker({
beforeShowDay:function(date) {
            try {
            var thisDate = $.datepicker.parseDate('m/d/y', $(this).closest('.form-group').find('.input-group input').val());
            return [true, thisDate && date.getTime() == thisDate.getTime() ? "oracletaleocwsv2-dp-highlight" : ""];
            } catch (e) {}
            return [true, ''];},
onSelect:function(dateText, inst) {
            $(this).closest('.form-group').find('.input-group input').val(dateText).change();
            $(this).datepicker();
            $(this).fadeOut();
    },
altField:'',altFormat:'',appendText:'',changeMonth:true,changeYear:true,closeText:'\'Close\'',constrainInput:true,currentText:'Clear',dateFormat:'m/d/y',monthYearDateFormat:'MM/yy',dayNames:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],dayNamesShort:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],dayNamesMin:['Su','Mo','Tu','We','Th','Fr','Sa'],defaultDate:null,duration:'normal',firstDay:0,gotoCurrent:false,hideIfNoPrevNext:false,isRTL:false,maxDate:null,minDate:null,monthNames:['January','February','March','April','May','June','July','August','September','October','November','December'],monthNamesShort:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],navigationAsDateFormat:false,nextText:'Next',numberOfMonths:1,prevText:'Previous',shortYearCutoff:'+10',showAnim:'show',showButtonPanel:true,showCurrentAtPos:0,showMonthAfterYear:false,showOptions:{},showOtherMonths:false,stepMonths:1,yearRange:'1920:2030'});});







    //jQuery Calendar

    jQuery(document).ready(function($) {
	$('.oracletaleocwsv2-datepicker.oracletaleocwsv2-datepicker-range').datepicker({
beforeShowDay:function(date) {
            try {
            var date1 = $.datepicker.parseDate('m/d/y', $(this).closest('.form-group').find('.form-inline .input-group .oracletaleocwsv2-to-field').val());
            var date2 = $.datepicker.parseDate('m/d/y', $(this).closest('.form-group').find('.form-inline .input-group .oracletaleocwsv2-from-field').val());
            return [true, date1 && ((date.getTime() == date1.getTime()) || (date2 && date >= date1 && date <= date2)) ? "oracletaleocwsv2-dp-highlight" : ""];
            } catch (e) {}
            return [true, ''];},
onSelect:function(dateText, inst) {
                    //populate the appropriate text boxes based on datepicker selection
                    var date1 = "";
                    var date2 = "";
                    try {
                    date1 = $.datepicker.parseDate('m/d/y', $(this).closest('.form-group').find('.form-inline .input-group .oracletaleocwsv2-to-field').val());
                    date2 = $.datepicker.parseDate('m/d/y', $(this).closest('.form-group').find('.form-inline .input-group .oracletaleocwsv2-from-field').val());
                    } catch (e) {}
                    if (!date1 || date2) {
                        $(this).closest('.form-group').find('.form-inline .input-group .oracletaleocwsv2-to-field').val(dateText);
                        $(this).closest('.form-group').find('.form-inline .input-group .oracletaleocwsv2-from-field').val("");
                        $(this).datepicker();
                    } else {
                        $(this).closest('.form-group').find('.form-inline .input-group .oracletaleocwsv2-from-field').val(dateText);
                        $(this).datepicker();
                        $(this).fadeOut();
                    }
                },
altField:'',altFormat:'',appendText:'',changeMonth:true,changeYear:true,closeText:'\'Close\'',constrainInput:true,currentText:'Clear',dateFormat:'m/d/y',monthYearDateFormat:'MM/yy',dayNames:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],dayNamesShort:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],dayNamesMin:['Su','Mo','Tu','We','Th','Fr','Sa'],defaultDate:null,duration:'normal',firstDay:0,gotoCurrent:false,hideIfNoPrevNext:false,isRTL:false,maxDate:null,minDate:null,monthNames:['January','February','March','April','May','June','July','August','September','October','November','December'],monthNamesShort:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],navigationAsDateFormat:false,nextText:'Next',numberOfMonths:1,prevText:'Previous',shortYearCutoff:'+10',showAnim:'show',showButtonPanel:true,showCurrentAtPos:0,showMonthAfterYear:false,showOptions:{},showOtherMonths:false,stepMonths:1,yearRange:'1920:2030'});});







    //Org today's date

    function getOrgTodayDate() {

        var todayDay = 9

        var todayMonth = 9

        var todayYear = 2017

        var todayDate =  new Date(todayYear, todayMonth, todayDay);

        return todayDate;

    }







    function checkForm(buttonElement, formElement, spinnerId) {
        var snapVal = $("div.snapshotContentDiv").html();
        $('input#snapshotContent').val(snapVal);

        if (!validateFormInput(formElement)) {
            return false;
        }
        $(buttonElement).attr('disabled', true);
        $('#' + spinnerId).css('display', 'inline-block');
        $(formElement).submit(); //chrome and safari needs this
        return false; //since we are submitting form above return false to prevent browser onclick submit
    }

    // Overriding standard messages
    jQuery.extend(jQuery.validator.messages, {
        required: "Required field",
        email: "Enter valid email",
        email_valid: "Enter valid email",
        date: "Enter valid date",
        equalTo: "Value does not match",
        number: "Enter valid number"
    });

    // Overriding standard required method to check for -1's
    jQuery.validator.methods.required = function(value, element, param) {
        if ("select" === element.nodeName.toLowerCase()) {
            var val = $(element).val();
            return (val && val.length > 0 && val != "-1") || $(element).is(":disabled");
        }
        return checkable(element) ? getLength(value, element) > 0 : $.trim(value).length > 0;
    }

    function getLength(value, element) {
        switch (element.nodeName.toLowerCase()) {
            case "select":
                return $("option:selected", element).length;
            case "input":
                if (checkable(element)) {
                    return findByName(element.name).filter(":checked").length;
                }
        }
        return value.length;
    }

    function findByName(name) {
        return $('#oracletaleocwsv2-wrapper').find("[name='" + name + "']");
    }

    function checkable(element) {
        return /radio|checkbox/i.test(element.type);
    }

    // field itself checks for maxlength
    jQuery.validator.methods.maxlength = function(value, element, param) {
        return true;
    }

    function validateFormInput(elementToValidate) {
        // if elementToValidate is not form, need to call initialize on the parent form
        var formElement = elementToValidate;
        if (!$(formElement).is('form')) {
            formElement = $(elementToValidate).closest('form');
        }

        var validator = $(formElement).validate({
            rules: {
                required: true,
                cwsPassword_2: {
                    equalTo: '#cwsPassword'
                },
                newPassword2: {
                    equalTo: '#newPassword1'
                },
                email: {
                    email_valid: true
                },
                cwsv2_profile_picture_upload_content_required: {
                    profile_picture_upload_required: true
                },
                cwsv2_resume_upload_content_required: {
                    resume_upload_required: true
                },
                cwsv2_work_history: {
                    min_work_history: true
                },
                cwsv2_education_history: {
                    min_education_history: true
                },
                cwsv2_residence_history: {
                    min_residence_history: true
                },
                cwsv2_reference: {
                    min_reference: true
                },
                cwsv2_certificate: {
                    min_cert_and_license: true
                },
                cc305Date: {
                    cc305_date: true
                },
                cwsPassword: {
                    minlength: 6,
                    cwsPassword_valid: true
                },
                newPassword1: {
                    minlength: 6,
                    cwsPassword_valid: true
                }
            },
            messages: {
                email: {
                    email_valid: "Enter valid email"
                },
                cc305Date: {
                    cc305_date: "Invalid date"
                },
                cwsv2_work_history: {
                    min_work_history: "Additional Work History is required"
                },
                cwsv2_education_history: {
                    min_education_history: "Additional Education History is required"
                },
                cwsv2_residence_history: {
                    min_residence_history: "Additional Residence History is required"
                },
                cwsv2_reference: {
                    min_reference: "Additional Reference is required"
                },
                cwsv2_certificate: {
                    min_cert_and_license: "Additional Certificate and License is required"
                },
                cwsv2_profile_picture_upload_content_required: {
                    profile_picture_upload_required: "Required field"
                },
                cwsv2_resume_upload_content_required: {
                    resume_upload_required: "Required field"
                },
                cwsPassword: {
                    minlength: "Must be at least 6 characters",
                    cwsPassword_startsWithLetter: "Must start with letter",
                    cwsPassword_valid: "Invalid characters"
                },
                newPassword1: {
                    minlength: "Must be at least 6 characters",
                    cwsPassword_startsWithLetter: "Must start with letter",
                    cwsPassword_valid: "Invalid characters"
                }
            },
            ignoreTitle: true,
            ignore: ":hidden:not('#cwsv2_work_history, #cwsv2_education_history, #cwsv2_residence_history, #cwsv2_reference, #cwsv2_certificate, #cwsv2_profile_picture_upload_content_required, #cwsv2_resume_upload_content_required, .cwsv2_validate_rlent_date, .cwsv2_validate_rlent_date_from_to, .cwsv2_work_history_instance, .cwsv2_education_history_instance, .cwsv2_residence_history_instance, .cwsv2_reference_instance, .cwsv2_certificate_instance, .cwsv2_double_entry_field_container, .cwsv2_encrypted_integer_container, .cwsv2_required_checkbox_container, .cwsv2_force_validation'),.cwsv2_ignore_validation",
            errorClass: "text-danger",
            errorElement: 'label',
            focusInvalid: false,
            errorPlacement: function (label, elem) {
                label.attr("for", elem);
                var siblingPlaceholder = elem.nextAll('.oracletaleocwsv2-error-text:first');
                siblingPlaceholder.css("display", "block");
                if (siblingPlaceholder.length > 0) {
                    siblingPlaceholder.html(label);
                } else {
                    var parentPlaceholder = elem.parent().nextAll('.oracletaleocwsv2-error-text:first');
                    parentPlaceholder.css("display", "block");
                    if (parentPlaceholder.length > 0) {
                        parentPlaceholder.html(label);
                    } else {
                        label.insertAfter(elem);
                    }
                }
            },
            invalidHandler: function (form, validator) {
                if (!validator.numberOfInvalids())
                    return;
                var errorElement = $(validator.errorList[0].element);
                var displayElement = errorElement;
                // if error element is hidden, scroll to its last sibling button or instance
                if (errorElement.is(":visible")) {
                    displayElement = errorElement.parent();
                } else {
                    displayElement = errorElement.siblings('.btn:last');
                }

                if (!displayElement.is(":visible")) {
                    displayElement = errorElement.closest('.oracletaleocwsv2-instance');
                }
                if (!displayElement.is(":visible")) {
                    displayElement = errorElement.closest(":visible");
                }
                $('html, body').animate({
                    scrollTop: displayElement.offset().top
                }, 1000);
            }
        });

        jQuery.validator.addMethod("email_valid", function(value, element) {
            if (this.optional(element)) {
                return true;
            }
            for (var k = 0; k = 0) {
                    return false;
                }
            }
            var index = value.indexOf('@');
            if (index  0) {
                var educationLength = $('.oracletaleocwsv2-instance[data-type=education]').length;
                var minEducation = $('[name=cwsMinEducationCount]').val();
                if (educationLength >= minEducation) {
                    return true;
                } else {
                    return false;
                }
            }
            return true;
        });

        jQuery.validator.addMethod("min_work_history", function(value, element) {
            var workContent = $('.oracletaleocwsv2-step.oracletaleocwsv2-active').children('.oracletaleocwsv2-dynamic-content-work');
            if (workContent === undefined || workContent.length === 0) {
                var webPage = $('#TBE_theForm').find('input[name="WebPage"]').val();
                if(webPage == "MYINF_V2"){
                    workContent = $('.oracletaleocwsv2-dynamic-content-work');
                }
            }
            if (workContent.length > 0) {
                var workLength = $('.oracletaleocwsv2-instance[data-type=work]').length;
                var minWork = $('[name=cwsMinWorkCount]').val();
                if (workLength >= minWork) {
                    return true;
                } else {
                    return false;
                }
            }
            return true;
        });

        function hasRequiredFields(element, classSelector) {
            var containsRequired;
            $(element).siblings(classSelector).children('.well').find('input, select, textarea').each(function(i) {
                if ($(this).prop('required')) {
                    containsRequired = true;
                    return false;
                }
            });
            return containsRequired;
        }

        jQuery.validator.addMethod("min_residence_history", function(value, element) {
            var residenceContent = $('.oracletaleocwsv2-step.oracletaleocwsv2-active').children('.oracletaleocwsv2-dynamic-content-residence');
            if (residenceContent === undefined || residenceContent.length === 0) {
                var webPage = $('#TBE_theForm').find('input[name="WebPage"]').val();
                if(webPage === "MYINF_V2"){
                    residenceContent = $('.oracletaleocwsv2-dynamic-content-residence');
                }
            }
            if (residenceContent.length > 0) {
                var residenceLength = $('.oracletaleocwsv2-instance[data-type=residence]').length;
                var minResidence = $('[name=cwsMinResidenceCount]').val();
                if (residenceLength >= minResidence) {
                    return true;
                } else {
                    return false;
                }
            }
            return true;
        });

        jQuery.validator.addMethod("min_reference", function(value, element) {
            var referenceContent = $('.oracletaleocwsv2-step.oracletaleocwsv2-active').children('.oracletaleocwsv2-dynamic-content-reference');
            if ( referenceContent === undefined || referenceContent.length === 0) {
                var webPage = $('#TBE_theForm').find('input[name="WebPage"]').val();
                if(webPage === "MYINF_V2"){
                    referenceContent = $('.oracletaleocwsv2-dynamic-content-reference');
                }
            }
            if (referenceContent.length > 0) {
                var referenceLength = $('.oracletaleocwsv2-instance[data-type=reference]').length;
                var minReference = $('[name=cwsMinReferenceCount]').val();
                if (referenceLength >= minReference) {
                    return true;
                } else {
                    return false;
                }
            }
            return true;
        });

        jQuery.validator.addMethod("min_cert_and_license", function(value, element) {
            var certContent = $('.oracletaleocwsv2-step.oracletaleocwsv2-active').children('.oracletaleocwsv2-dynamic-content-certificate');
            if (certContent === undefined || certContent.length === 0) {
                var webPage = $('#TBE_theForm').find('input[name="WebPage"]').val();
                if(webPage === "MYINF_V2"){
                    certContent = $('.oracletaleocwsv2-dynamic-content-certificate');
                }
            }
            if (certContent.length > 0) {
                var certLength = $('.oracletaleocwsv2-instance[data-type=certificate]').length;
                var minCert = $('[name=cwsMinCertificateCount]').val();
                if (certLength >= minCert) {
                    return true;
                } else {
                    return false;
                }
            }
            return true;
        });

        jQuery.validator.addMethod("validate_date_no_future", function(value, element) {
            var isValid = true;
            var monthYear = $(element).val();
            var delimiterPos = monthYear.search("/");
            var month = monthYear.substring(0, delimiterPos);
            var year = monthYear.substring(delimiterPos + 1, monthYear.length);
            var d = new Date();
            //incrementing month as it is 0 based
            var currentMonth = d.getMonth() + 1;
            var currentYear = d.getFullYear();
            var elementId = $(element).attr("id");
            if ((month > currentMonth && year >= currentYear) && !((elementId == "workDateTo" || elementId == "dateTo") && year == 9000)) {
                isValid = false;
            }
            return isValid;
        }, "Cannot be future date");

        jQuery.validator.addMethod("validate_from_less_than_to_date", function(value, element) {
            var isValid = true;
            if ($(element).attr("id").search("ateFrom") > 0) {
                return isValid;
            }
            var toDateVal = $(element).val();
            if (!toDateVal) {
                return isValid;
            }
            var delimiterPos = toDateVal.search("/");
            var toMonth = toDateVal.substring(0, delimiterPos);
            var toYear = toDateVal.substring(delimiterPos + 1, toDateVal.length);

            var fromDateVal = $(element).parents('.well').find("input[type='hidden'][id*='ateFrom']").val();
            if (fromDateVal) {
                var delimiterPosFrom = fromDateVal.search("/");
                if (delimiterPosFrom > 0) {
                    var fromMonth = fromDateVal.substring(0, delimiterPosFrom);
                    var fromYear = fromDateVal.substring(delimiterPosFrom + 1, fromDateVal.length);
                    var fromDate = new Date();
                    fromDate.setMonth(fromMonth - 1);
                    fromDate.setYear(fromYear);
                    fromDate.setDate(15);
                    fromDate.setHours(0);
                    fromDate.setMinutes(0);
                    fromDate.setSeconds(0);
                    var toDate = new Date();
                    toDate.setMonth(toMonth - 1);
                    toDate.setYear(toYear);
                    toDate.setDate(15);
                    toDate.setHours(0);
                    toDate.setMinutes(0);
                    toDate.setSeconds(0);
                    if (fromDate > toDate) {
                        isValid = false;
                    }
                }
            }
            return isValid;
        }, "Start date cannot be after the end date");

        jQuery.validator.addMethod("resume_upload_required", function(value, element) {
            var resumeContent = $(element).closest('.oracletaleocwsv2-dynamic-content-resume');
            if (resumeContent.length > 0 && resumeContent.is(':visible')) {
                var resumeLength = $('.oracletaleocwsv2-instance[data-type=resume]').length;
                if (resumeLength >= 1) {
                    return true;
                } else {
                    return false;
                }
            }
            return true;
        });

        jQuery.validator.addMethod("profile_picture_upload_required", function(value, element) {
            var profilePictureContent = $(element).closest('.oracletaleocwsv2-dynamic-content-profile_picture');
            if (profilePictureContent.length > 0 && profilePictureContent.is(':visible')) {
                var profilePictureLength = $('.oracletaleocwsv2-instance[data-type=profile_picture]').length;
                if (profilePictureLength >= 1) {
                    return true;
                } else {
                    return false;
                }
            }
            return true;
        });

        jQuery.validator.addMethod("cc305_date", function(value, element) {
            var noIssue = true;
            if ($(element).val().trim() == "") {
                noIssue = false;
            }
            var oldVal = $(element).val();
            $(element).datepicker("setDate", $(element).val());
            if (oldVal != $(element).val()) {
                $(element).val(oldVal);
                noIssue = false;
            }

            return this.optional( element ) || noIssue;
        });

        jQuery.validator.addMethod("todays_date", function(value, element) {
            if ($(element).val().trim() == "") {
                return true;
            }
            var currentVal = $(element).val();
            var todayDate = $.datepicker.formatDate('m/d/y', getOrgTodayDate());
            if (currentVal != todayDate) {
                return false;
            }
            return true;
        });

        jQuery.validator.addMethod("valid_date", function(value, element) {
            if ($(element).val().trim() == "") {
                return true;
            }
            var parsedDate = undefined;
            try {
                parsedDate = $.datepicker.parseDate('m/d/y', $(element).val());
            } catch (e) {
            }
            if (parsedDate == undefined) {
                return false;
            }
            return true;
        });

        jQuery.validator.addMethod("education_history_required_instance", function(value, element) {
            var educationInstanceContent = $('.oracletaleocwsv2-step.oracletaleocwsv2-active').find('.cwsv2_education_history_instance');
            var isValid = true;
            if (educationInstanceContent.length > 0) {
                $(element).closest('.oracletaleocwsv2-instance').children('.well').find('input, select, textarea').each(function(i) {
                    if ($(this).prop('required')) {
                        var element = this;
                        var value = $(this).val();
                        if ("select" === element.nodeName.toLowerCase()) {
                            var val = $(element).val();
                            isValid = (val && val.length > 0 && val != "-1") || $(element).is(":disabled");
                        } else {
                            isValid = checkable(element) ? getLength(value, element) > 0 : $.trim(value).length > 0;
                        }
                        if (!isValid) {
                            return false;
                        }
                    }
                });
            }
            return isValid;
        }, "Required fields missing");

        jQuery.validator.addMethod("work_history_required_instance", function(value, element) {
            var workInstanceContent = $('.oracletaleocwsv2-step.oracletaleocwsv2-active').find('.cwsv2_work_history_instance');
            var isValid = true;
            if (workInstanceContent.length > 0) {
                $(element).closest('.oracletaleocwsv2-instance').children('.well').find('input, select, textarea').each(function(i) {
                    if ($(this).prop('required')) {
                        var element = this;
                        var value = $(this).val();
                        if ("select" === element.nodeName.toLowerCase()) {
                            var val = $(element).val();
                            isValid = (val && val.length > 0 && val != "-1") || $(element).is(":disabled");
                        } else {
                            isValid = checkable(element) ? getLength(value, element) > 0 : $.trim(value).length > 0;
                        }
                        if (!isValid) {
                            return false;
                        }
                    }
                });
            }
            return isValid;
        }, "Required fields missing");


        jQuery.validator.addMethod("residence_history_required_instance", function(value, element) {
            var residenceInstanceContent = $('.oracletaleocwsv2-step.oracletaleocwsv2-active').find('.cwsv2_residence_history_instance');
            var isValid = true;
            if (residenceInstanceContent.length > 0) {
                $(element).closest('.oracletaleocwsv2-instance').children('.well').find('input, select, textarea').each(function(i) {
                    if ($(this).prop('required')) {
                        var element = this;
                        var value = $(this).val();
                        if ("select" === element.nodeName.toLowerCase()) {
                            var val = $(element).val();
                            isValid = (val && val.length > 0 && val != "-1") || $(element).is(":disabled");
                        } else {
                            isValid = checkable(element) ? getLength(value, element) > 0 : $.trim(value).length > 0;
                        }
                        if (!isValid) {
                            return false;
                        }
                    }
                });
            }
            return isValid;
        }, "Required fields missing");

        jQuery.validator.addMethod("reference_required_instance", function(value, element) {
            var referenceInstanceContent = $('.oracletaleocwsv2-step.oracletaleocwsv2-active').find('.cwsv2_reference_instance');
            var isValid = true;
            if (referenceInstanceContent.length > 0) {
                isValid = validateRequiredFields(element);
            }
            return isValid;
        }, "Required fields missing");

        jQuery.validator.addMethod("cert_and_license_required_instance", function(value, element) {
            var certInstanceContent = $('.oracletaleocwsv2-step.oracletaleocwsv2-active').find('.cwsv2_certificate_instance');
            var isValid = true;
            if (certInstanceContent.length > 0) {
                isValid = validateRequiredFields(element);
            }
            return isValid;
        }, "Required fields missing");

        var validateRequiredFields = function(element) {
            var isValid = true;
            $(element).closest('.oracletaleocwsv2-instance').children('.well').find('input, select, textarea').each(function(i) {
                if ($(this).prop('required')) {
                    var element = this;
                    var value = $(this).val();
                    if ("select" === element.nodeName.toLowerCase()) {
                        var val = $(element).val();
                        isValid = (val && val.length > 0 && val != "-1") || $(element).is(":disabled");
                    } else {
                        isValid = checkable(element) ? getLength(value, element) > 0 : $.trim(value).length > 0;
                    }
                    if (!isValid) {
                        return false;
                    }
                }
            });
            return isValid;
        };

        jQuery.validator.addMethod("cwsv2_double_entry_field_validation", function(value, element) {
            var divContainer = $(element).parent();
            if (divContainer.is(':visible')) {
                var isChanged = divContainer.find('[id*="_CHANGED"]');
                if (isChanged.val() == "true") {
                    var isValidationValue = divContainer.find('[id*="_validated"]');
                    if (isValidationValue.length  0) {
                            return $(fieldToValidate).val() == $(checkField).val();
                        }
                    }
                }
            }
            return true;
        }, "Value does not match");

        jQuery.validator.addMethod("cwsv2_encrypted_integer_validation", function(value, element) {
            var divContainer = $(element).parent();
            if (divContainer.is(':visible')) {
                var isChanged = divContainer.find('[id*="_CHANGED"]');
                if (isChanged.val() == "true") {
                    var isValidationValue = divContainer.find('[id*="_validated"]');
                    if (isValidationValue.length  0) {
                            return this.optional(fieldToValidate.get(0)) || /^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(fieldToValidate.val());
                        }
                    }
                }
            }
            return true;
        }, "Enter valid number");

        jQuery.validator.addMethod("cwsv2_required_checkbox_validation", function(value, element) {
            var checkboxElementContainer = $(element).parent();
            if (checkboxElementContainer.is(':visible')) {
                var checkboxElement = $(checkboxElementContainer).find('input[type="checkbox"]');
                if (checkboxElement.length > 0) {
                    return $(checkboxElement).is(':checked');
                }
            }
            return true;
        }, "This box must be checked");

        jQuery.validator.addClassRules({
            cwsv2_work_history_instance: {
                work_history_required_instance: true
            },
            cwsv2_validate_rlent_date: {
                validate_date_no_future: true
            },
            cwsv2_validate_rlent_date_from_to: {
                validate_from_less_than_to_date: true
            },
            cwsv2_education_history_instance: {
                education_history_required_instance: true
            },
            cwsv2_residence_history_instance: {
                residence_history_required_instance: true
            },
            cwsv2_reference_instance: {
                reference_required_instance: true
            },
            cwsv2_certificate_instance: {
                cert_and_license_required_instance: true
            },
            cwsv2_double_entry_field_container: {
                cwsv2_double_entry_field_validation: true
            },
            cwsv2_decimal: {
                number: true
            },
            cwsv2_integer: {
                number: true
            },
            cwsv2_encrypted_integer_container: {
                cwsv2_encrypted_integer_validation: true
            },
            cwsv2_required_checkbox_container: {
                cwsv2_required_checkbox_validation: true
            },
            cwsv2_email: {
                email_valid: true
            }
        });

        // if element is form, use full form validation, if element is section, validate only its contents
        if ($(elementToValidate).is('form')) {
            if (!$(elementToValidate).valid()) {
                return false;
            }
        } else {
            var status = true;
            $(elementToValidate).find("input, select, textarea").each(function () {
                if (!validator.element($(this))) {
                    status = false;
                }
            });
            return status;
        }
        return true;
    }












    // Same code as in csrfInclude.jsp

    var TBE_OBJ ={};

    TBE_OBJ.CSRF={};

    TBE_OBJ.CSRF.enabled=false;

    



        TBE_OBJ.CSRF.tokenParam = '_csrf';

        TBE_OBJ.CSRF.tokenValue = 'v1:;1507571879670:;hp7OLFWrp7oVIy+6mfKpozFEy4qg+JvGjZ2x4TNGSgQ=';

        TBE_OBJ.CSRF.enabled=true;

        var jq = $;

        if (typeof $ == 'undefined') {

            jq = jQuery;

        }

        if(typeof jq !=='undefined') {

            jq(document).ready(function () {

                appendCsrfTokenToForms(TBE_OBJ.CSRF.tokenParam, TBE_OBJ.CSRF.tokenValue,'chj.tbe.taleo.net');

            });

        }

    











    $('.scroll').jscroll({

        nextSelector: 'a.jscroll-next:last',

        loadingHtml: ""

    });



    // if two jscroll objects on one page, they should be initialized separately

    $('.scroll-my-jobs').jscroll({

        nextSelector: 'a.jscroll-next:last',

        autoTrigger: false,

        loadingHtml: ""

    });



    $('.scroll-suggested-jobs').jscroll({

        nextSelector: 'a.jscroll-next:last',

        autoTrigger: false,

        loadingHtml: ""

    });



    $(function () {

        $('.orderbyPicker').on('change', function () {

            var colSelected = $(this).find("option:selected").val();

            var sortSelected = $('.sortOrderbyPicker').find("option:selected").val();

            location.href = colSelected + "&" + sortSelected;

        });

    });



    $(function () {

        $('.sortOrderbyPicker').on('change', function () {

            var sortSelected = $('.orderbyPicker').find("option:selected").val();

            var selected = $(this).find("option:selected").val();

            location.href = sortSelected + "&" + selected;

        });

    });








  var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-2009958-1']);
    _gaq.push(['_trackPageview']);
    _gaq.push(['_setCustomVar', 1, 'Section', 'CWS', 3]);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();














